@{
    ViewData["Title"] = "Stats";
}
@model RunDetailsVm

<div class="container-fluid">
    <h1>Details</h1>
    <div class="row">
        <div class="col-lg-12"><h3>https://www.msn.com/</h3></div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <span class="pull-right">
                @Model.StartTime | Total : <b>@Model.Calls.Count()</b> calls
            </span>
        </div>
    </div>

    @Html.Partial("Partials/RunDetailsDuplicateCalls")

    @Html.Partial("Partials/RunDetailsResponseStatusDonutChart")


    <div class="row">
        <div class="col-lg-3" class="pull-right">

            <form asp-action="RunDetails" method="get" class="pull-right">
                <span class="pull-right">
                    <SELECT asp-for="DisplayType" class="pull-right">
                        <option value="grouped">Grouped by resource type</option>
                        <option value="all">All</option>
                    </SELECT>
                </span>
            </form>
        </div>

    </div>
    <div class="row">
        <div class="table-responsive">
            @if (Model.DisplayType == "grouped")
            {
                @Html.Partial("Partials/RunDetailCallsGroupedByResourceType")
            }
            else
            {

                <table class="table table-striped table-condensed table-responsive">
                    <thead>
                        <tr>
                            <td>Start Time</td>
                            <td>Method</td>
                            <td>Duration</td>
                            <td>Status</td>
                            <td>Type</td>
                            <td>Url</td>
                        </tr>
                    </thead>

                    @foreach (var run in Model.Calls.OrderByDescending(a => a.Duration).ThenBy(a => a.ResourceType))
                    {
                        <tr>
                            <td class="small">@run.StartTime.ToString("t")</td>
                            <td class="small">@run.Method</td>
                            <td class="small"><a asp-controller="Home" asp-action="DetailsForUrl" asp-route-url="@run.Url" title="Click to see details"> @run.Duration</a></td>
                            <td class="small">@run.Status</td>
                            <td class="small">@run.ResourceType</td>
                            <td class="small"><a asp-controller="Home" asp-action="DetailsForUrl" asp-route-url="@run.Url" title="Click to see details"> @run.Url</a></td>
                        </tr>
                    }
                </table>

            }
        </div>
    </div>
</div>

@{
    var groupedByStats = Model.Calls.GroupBy(a => a.Status, d => d, (k, v) => new { Status = k, Count = v.Count() }).ToList();

}
@section Scripts
    {
    <script>
        $(function () {
                $("#DisplayType").change(function() {
                    $(this).closest("form").submit();
                });

                var data = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(groupedByStats));
                var d = [['Status', 'Count']];

                for (var i = 0, len = data.length; i < len; i++) {
                    var item = data[i];
                    d.push([item.Status+' ', item.Count]);
                }

                google.charts.load('current', {'packages':['corechart']});
                google.charts.setOnLoadCallback(drawChart);

                function drawChart() {
                    var data = google.visualization.arrayToDataTable(d);

                    var options = {
                        title: 'Response Status',
                        pieHole: 0.4
                    };

                    var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
                    chart.draw(data, options);
                }

            });



    </script>


    </script>
}


